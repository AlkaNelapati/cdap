#!/usr/bin/env bash

bin=`dirname "${BASH_SOURCE-$0}"`
bin=`cd "$bin"; pwd`
script=`basename $0`
user=$USER
epoch=`date +%s`
PID_DIR="/var/haystack/run"
LOG_DIR="/var/log/haystack"

if [ "$(id -u)" != "0" ]; then
  echo "Must be run as root"
  exit 1
fi

if [ ! -d $PID_DIR ]; then
  mkdir -p $PID_DIR >/dev/null
fi

if [ ! -d $LOG_DIR ]; then
  mkdir -p $LOG_DIR >/dev/null
fi

function usage() {
  echo "Haystack web-application Lifecycle managment."
  echo "Usage: $script <start|stop|restart> [--gateway <hostname-port>]"
  echo ""
  echo "  Options"
  echo "    --action    Specifies the action to be taken on webapp application."
  echo "    --gateway   Specifies the hostname and port gateway is running on. (Default: localhost:10000)"
  echo "    --help      This help message"
  echo ""
}

if [ $# -lt 1 ]; then
  usage
  exit 1
fi

gateway="localhost:10000"
action=$1; shift

while [ $# -gt 0 ]
do
  case "$1" in
    --gateway) shift; gateway="$1"; shift;;
    *)  usage; exit 1
  esac
done

if [ "x$action" != "xstart" ] && [  "x$action" != "xstop" ] && [ "x$action" != "xrestart" ]; then
  usage
  echo "Invalid action specified." 
fi

function start() {
  if [ -f $PID_DIR/$script.pid ]; then
    echo "Please stop the haystack webapp that is already running"
    exit 1
  fi
  echo "Starting haystack webapp ..."
  node $bin/../webapp/server/main.js < /dev/null >> $LOG_DIR/$script.log 2>&1 &
  echo $! > $PID_DIR/$script.pid  
}

function stop() {
  echo "Stopping haystack webapp ..."
  if [ ! -f $PID_DIR/$script.pid ]; then
    echo "Nothing to stop."
  else
    PID=`cat $PID_DIR/$script.pid 2>/dev/null`
    if [ "x$PID" != "x" ]; then
      kill $PID 2>/dev/null >/dev/null
    fi
  fi
  rm -f $PID_DIR/$script.pid 2>/dev/null >/dev/null
}

if [ "x$action" == "xstart" ]; then
  start
fi

if [ "x$action" == "xstop" ]; then
  stop
fi

if [ "x$action" == "xrestart" ]; then
  stop
  start
fi  
